.pixel-perfect {
	top: 0px;
	display: block;
	@include a-cent(x);
	pointer-events: none;
	z-index: 1000;
	overflow: hidden;
	width: 100%;
	height: 100%;
	background-position: center 0;
	opacity: 0;
	//opacity: 0.7;
} 

body,
html {

	font-size: var(--fontSizeBase);
	// @include font-size(1rem);
	// overflow-x: hidden;
}
html{
	-webkit-text-size-adjust: 100%;
	-webkit-tap-highlight-color: rgba(33, 36, 41, 0);
}

body {
	// min-width: 320px; 
	-webkit-font-smoothing: antialiased;
	position: relative;
	overflow-x: hidden; 
	
	&.loaded_hiding {
		@include mt;

		opacity: 0;
		pointer-events: none;

		&::before {
			display: none;
		}
	}

	&.loaded {
		pointer-events: visible;
		opacity: 1;
	}

	&::before {
		content: '';
		position: absolute;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
		@include mt;
		background-color: #000000;
		opacity: 0;
		z-index: -1;
		// left: 200px;
		left: 0;
		// opacity: 1;
		// z-index: 1;
		top: 0;
	}

	&.fancybox-active {
		overflow: hidden;

	}

	&.fixed {
		overflow: hidden;
		position: absolute;
		width: 100%;
		left: 0;
		top: 0;
		z-index: 999;

		&::before {
			z-index: 999;
			opacity: 0.76;
		}
	}
	&.fixed2 {
		@include media-breakpoint-down(xl){
			overflow: hidden;
			position: absolute;
			width: 100%;
			left: 0;
			top: 0;
			z-index: 999;
		}
	}
}

.main-wrapper {
	overflow-x: hidden;
	display: flex;
	flex-direction: column;
	min-width: 0;
	min-height: 100vh;
}

.section {
	@include bgs;
	padding-top: var(--sPT);
	padding-bottom: var(--sPB);
}

.section-title {
	padding-bottom: var(--sTPB);

	& > *:last-child{
		margin-bottom: 0;
	}
}



.mono {
	font-family: $font-family-monospace;
}

.small {
	font-size: $small;
}

.tdn {
	text-decoration: none !important;
}

.ttu {
	text-transform: uppercase;
}

.tdu {
	text-decoration: underline;

	&:hover {
		text-decoration: none;
	}
}

.fw-300 {
	font-weight: 300;
}

.fw-500 {
	font-weight: 500;
}

.fw-900 {
	font-weight: 900;
}
.fw-600 {
	font-weight: 600;
}
.fw-100 {
	font-weight: 100;
}

.row--sm {
	--bg-gutter-x: #{rem(20)};
}



.slick-slide img {
	display: inline
}

.image-source-link {
	color: #98C3D1;
}

.slick-slide {
	outline: 0 !important;
}

.slick-arrow {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
	z-index: 2; 
	cursor: pointer; 
	&.l {
		left: 0; 
		svg {
			@include transform(rotateY(180deg));
		}
	} 
	&.r {
		right: 0; 
	} 
	svg {
		width: 17px;
		height: auto;
	}
}


.strong {
	font-weight: bold;
}

ul {
	padding-left: 0;
}

.res-i {
	max-width: 100%;
	// width: auto;
	height: auto;
}

.img-bg {
	@include img-bg();
}

.bgs {
	@include bgs();
}

.table {
	display: table
}

.tr {
	display: table-row
}

.td {
	display: table-cell
}


.tabs {
	&__btn {
		&:hover {
			cursor: pointer;
		}

		&.active {}

	}

	&__content {
		&.active {
			display: block;
		}

		display: none;
	}
}



.invisible {
	position: absolute;
	width: 1px;
	height: 1px;
	margin: -1px;
	border: 0;
	padding: 0;
	clip: rect(0 0 0 0);
	overflow: hidden;
}



.control-wrap {
	position: relative;
}

.swiper-button-hand {
	width: var(--swiperArrowSize);
	height: var(--swiperArrowSize);
	border-radius: 50%;
	background-color: var(--swiperBgDef);
	border: 2px solid var(--swiperBorderColorDef);
	color: var(--swiperColorDef);
	@include bgs;
	z-index: 300;
	outline: none !important;
	// margin-bottom: 0;
	background-image: none;
	margin: 0;
	@include a-cent(y);
	box-shadow: 0 15px 60px rgba(0, 0, 0, 0.1);
	@include mt;

	&:hover {
		background-color: var(--swiperBgDefHover);
		border-color: var(--swiperBorderColorDefHover);
		color: var(--swiperColorDefHover);
	}

	.icon {
		font-size: rem(12);
	}

	&::after {
		display: none;
	} 
	&-next {
		right: var(--swiperArrowPosition);
	}

	&-prev {
		left: var(--swiperArrowPosition);
	}
}

.swiper-pagination {
	width: 100%;
	text-align: center;

	&-bullet {
		opacity: 1;
		width: 8px;
		height: 8px;
		border-radius: 50%;
		background-color: $secondary;
		outline: none !important;
		@include mt;
		margin-left: rem(8);
		// padding-right: rem(8);
		margin-right: rem(5);

		&-active,
		&:hover {
			background-color: var(--bs-primary) ;
		}
	}
}




@include media-breakpoint-up(lg) {
	.wow {
		visibility: hidden;
	}
}


picture {
	display: block;
	img {
		@extend .res-i;
	}

}

img.object-fit-js {
	height: 100%;
	width: 100%;
	display: block;
	object-fit: cover;
}

img.img-bg,
.object-fit-js img {
	object-fit: cover;
	object-position: top;
}


a {
	@include mt;
}

img.img-bg,
.picture-bg {
	position: absolute;
	z-index: -1;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
}


.bg-wrap {
	position: relative;
	z-index: 2;
}

// .pagination-wrapper li

.browsehappy {
	position: absolute;
	// position: fixed;
	width: 100%;
	z-index: 2000;
	background: #000;
	min-height: 100px;
	font-size: 10px;
	color: #ffffff;
	top: 0;
	padding-top: 30px;

}

iframe {
	border: none;
}

*::selection {
	color: #fff;
	/* Цвет текста */
	background: var(--bs-primary) ;
	/* Цвет фона */
}



.custom-scroll {
	scrollbar-color: var(--bs-primary)  transparent;

	scrollbar-width: thin;
	scrollbar-color: var(--bs-primary)  transparent;

	&::-webkit-scrollbar-thumb {
		opacity: 1;
		display: block
	}

	&::-webkit-scrollbar-track {
		border: none;
		background-color: transparent;
		border-color: transparent;
		-webkit-box-shadow: none;
	}

	&::-webkit-scrollbar {
		width: 4px;
		height: 2px;
		background-color: transparent;
		// border-right: 2px;
		/* or add it to the track */
		border-color: transparent;
		opacity: 0;
		-webkit-box-shadow: none;

	}

	/* Add a thumb */
	&::-webkit-scrollbar-thumb {
		background: var(--bs-primary) ;
		border-radius: 2.5px;
	}

	&::-webkit-scrollbar-button {
		display: none
	}
}


a{
	@include mt();
	text-decoration: none;
}

//btns
.btn{
	box-shadow: 0 0 0 0 rgba($black, .7)!important;
	&:hover{
		box-shadow: 2px 2px 12px -4px rgba($black, .7) !important;
	}
}

.default-btn{
	@extend .btn;
	@extend .btn-primary;
	color: $white!important;
	font-weight: 500;
	background-color: transparent!important;
	border: none!important;

	font-size: 13px;
	line-height: (16/13);


	&:hover{
		&:before{
			width: 150%;
		}
	}

	overflow: hidden;
	position: relative;
	z-index: 1;
	&:before{
		@include mt();
		content: '';
		position: absolute;
		z-index: -1;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;

		background: linear-gradient(54.42deg, #FF8034 -0.47%, #FF394D 88.37%);
	}
}
//.swiper-nav-frame
.swiper-nav-frame{
	border-radius: 50%;
	@extend .default-btn;
	position: absolute;
	top: 50%;


	width: 30px;
	height: 30px;
	@include media-breakpoint-up(sm){
		width: rem(50);
		height: rem(50);
	}

	padding: 0;
	display: flex;
	align-items: center;
	justify-content: center;

	.icon{
		font-size: 16px;
		@include media-breakpoint-up(sm){
			font-size: 20px;
		}
	}
}

//
.accept-ratio-frame{
	display: block;
	width: 100%;
	height: 0;
	position: relative;

	background-color: $black;
	overflow: hidden;
	&:hover{
		img{
			// opacity: .8;
			filter: brightness(80%);
			//transform: scale(1.1);
		}
	}

	img{
		@include mt();
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		object-fit: cover;
	}
}

.accept-ratio-frame-nh{
	display: block;
	width: 100%;
	height: 0;
	position: relative;

	//background-color: $black;
	overflow: hidden;

	img{
		@include mt();
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		object-fit: cover;
	}
}

//pugin
.swiper-pugin-frame{
	display: flex;
	align-items: center;
	justify-content: center;

	.swiper-pagination-bullet{
		width: 6.9px;
		height: 6.9px;
		margin: 5px 9.5px;
		@include media-breakpoint-up(sm){
			width: rem(12);
			height: rem(12);
			margin: 5px rem(16.5);
		}

		opacity: 1;

		border-radius: 50%;
		background: $gray-450;
		&:hover, &-active{
			background: $primary;
		}

		&:hover{
			opacity: .8;
		}
	}
}

//
.form-select{
	background-image: url(../img/svg/chevron-down.svg);
}

//breadcrumbs
.breadcrumb-par{
	margin-bottom: rem(30);
}
.breadcrumb{
	display: flex;
	align-items: center;
	list-style: none;
	padding: 0;
	margin: 0;
}

.breadcrumb-item{
	display: flex;
	align-items: center;

	&:last-child:after{
		content: none;
	}

	&:after{
		content: '';

		background-image: url(../img/svg/breadcrumb-arrow-sm.svg);
		background-size: contain;
		width: 11px;
		height: 8px;
		margin: 0 7.5px;
		@include media-breakpoint-up(sm){
			background-image: url(../img/svg/breadcrumb-arrow.svg);
			background-size: cover;
			width: 18px;
			height: 10px;
			margin: 0 10px;
		}

		background-repeat: no-repeat;
		background-position: center;
	}

	a{
		font-weight: 500;
		line-height: (17/14);

		font-size: 10px;
		@include media-breakpoint-up(sm){
			font-size: rem(14px);
		}

		color: $gray-650;
		&:hover{
			color: $primary;
		}
	}
}

//pugination
.pagination{
	background: rgba(255, 255, 255, 0.7);

	padding: 15px 7px;
	position: relative;
	left: calc(-1 * (100vw - 100%) / 2);
	width: 100vw;
	@include media-breakpoint-up(sm){
		padding: rem(20) rem(12px);
		position: static;
		left: unset;
		width: 100%;
	}
	@include media-breakpoint-up(lg){
		padding: rem(24px);
	}
	@include media-breakpoint-up(xxl){
		padding: 22px 24px 20px;
	}

	&__row{
		flex-wrap: nowrap;


		@include roww(6px);
		@include media-breakpoint-up(sm){
			@include roww(rem(10));
		}
		align-items: center;
		@include media-breakpoint-up(lg){
			@include roww(rem(30));
			align-items: stretch;
		}
	}

	&__txt-link{
		font-weight: bold;

		font-size: 7px;
		line-height: (9/7);
		@include media-breakpoint-up(sm){
			font-size: rem(14);
			line-height: (17/14);
		}

		color: $black;
		&:hover{
			color: $orange-red;
		}
	}

	&__links{
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		justify-content: center;

		//@include media-breakpoint-up(xxl){
		//	position: relative;
		//	top: -3px;
		//	left: -10px;
		//}
	}
	&__link{
		padding: 0px 6px;
		@include media-breakpoint-up(sm){
			padding: rem(4px);
		}
		@include media-breakpoint-up(lg){
			padding: rem(4px) rem(10px);
		}

		font-weight: bold;

		font-size: 9px;
		line-height: (11/9);
		@include media-breakpoint-up(sm){
			font-size: rem(14px);
			line-height: (17/14);
		}

		color: $black;
		&:hover{
			color: $orange-red;
		}

		&--current{
			color: $orange-red;

			//padding-right: 5px;//?
			font-size: 13px;
			@include media-breakpoint-up(sm){
				//padding-right: rem(8);//?
				font-size: rem(20);
			}
		}
	}
	//
	&__{}
	&__{}
}

//
//animations
.border-draw {
	box-shadow: inset 0 0 0 3px darken($danger, 2);
	font-weight: 400;
	//color: $red;
	font-size: inherit;
	font-weight: 700;

	// Required, since we're setting absolute on pseudo-elements
	position: relative;
	z-index: 1;
	vertical-align: middle;

	&::before,
	&::after {
		box-sizing: inherit;
		content: '';
		position: absolute;
		z-index: -1;
		width: 100%;
		height: 100%;
	}
}

.draw {
	transition: color 0.25s;

	&::before,
	&::after {
		// Set border to invisible, so we don't see a 4px border on a 0x0 element before the transition starts
		border: 3px solid transparent;
		width: 0;
		height: 0;
	}

	// This covers the top & right borders (expands right, then down)
	&::before {
		top: 0;
		left: 0;
	}

	// And this the bottom & left borders (expands left, then up)
	&::after {
		bottom: 0;
		right: 0;
	}

	&:hover {
		color: lighten($orange-red, 5);
	}

	// Hover styles
	&:hover::before,
	&:hover::after {
		width: 100%;
		height: 100%;
	}

	&:hover::before {
		border-top-color: lighten($orange-red, 5); // Make borders visible
		border-right-color: lighten($orange-red, 5);
		transition:
			width 0.25s ease-out, // Width expands first
			height 0.25s ease-out 0.25s; // And then height
	}

	&:hover::after {
		border-bottom-color: lighten($orange-red, 5); // Make borders visible
		border-left-color: lighten($orange-red, 5);
		transition:
			border-color 0s ease-out 0.5s, // Wait for ::before to finish before showing border
			width 0.25s ease-out 0.5s, // And then exanding width
			height 0.25s ease-out 0.75s; // And finally height
	}
}

// Inherits from .draw
.meet {

	&:hover {
		color: $yellow;
	}

	// Start ::after in same position as ::before
	&::after {
		top: 0;
		left: 0;
	}

	// Change colors
	&:hover::before {
		border-top-color: $yellow;
		border-right-color: $yellow;
	}

	&:hover::after {
		border-bottom-color: $yellow;
		border-left-color: $yellow;
		transition: // Animate height first, then width
			height 0.25s ease-out,
			width 0.25s ease-out 0.25s;
	}

}

// Does not inherit
.center {
	&:hover {
		color: $purple;
	}

	// Set up base styles, we're going to scale instead of animating width/height
	&::before,
	&::after {
		top: 0;
		left: 0;
		height: 100%;
		width: 100%;
		transform-origin: center; // Ensure scaling is done from the center (expands outwards)
	}

	// scale3d(<scale-horizontal>, <scale-vertical>, <scale-depth>);
	&::before {
		border-top: 2px solid $purple;
		border-bottom: 2px solid $purple;
		transform: scale3d(0,1,1); // Shrink only width
	}

	&::after {
		border-left: 2px solid $purple;
		border-right: 2px solid $purple;
		transform: scale3d(1,0,1); // Shrink only height
	}

	&:hover::before,
	&:hover::after {
		transform: scale3d(1,1,1); // Show full-size
		transition: transform 0.5s;
	}
}

// Border spins around element
// ::before holds three borders that appear separately, one at a time
// ::after holds one border that spins around to cover ::before's borders, making their appearance seem smooth

.spin {
	width: 5em;
	height: 5em;
	padding: 0;

	&:hover {
		color: $blue;
	}

	&::before,
	&::after {
		top: 0;
		left: 0;
	}

	&::before {
		border: 2px solid transparent; // We're animating border-color again
	}

	&:hover::before {
		border-top-color: $blue; // Show borders
		border-right-color: $blue;
		border-bottom-color: $blue;

		transition:
			border-top-color 0.15s linear, // Stagger border appearances
			border-right-color 0.15s linear 0.10s,
			border-bottom-color 0.15s linear 0.20s;
	}

	&::after {
		border: 0 solid transparent; // Makes border thinner at the edges? I forgot what I was doing
	}

	&:hover::after {
		border-top: 2px solid $blue; // Shows border
		border-left-width: 2px; // Solid edges, invisible borders
		border-right-width: 2px; // Solid edges, invisible borders
		transform: rotate(270deg); // Rotate around circle
		transition:
			transform 0.4s linear 0s,
			border-left-width 0s linear 0.35s; // Solid edge post-rotation
	}
}

.circle {
	border-radius: 100%;
	box-shadow: none;

	&::before,
	&::after {
		border-radius: 100%;
	}
}

.thick {
	color: $red;

	&:hover {
		color: #fff;
		font-weight: 700;
	}

	&::before {
		border: 2.5em solid transparent;
		z-index: -1;
	}

	&::after {
		mix-blend-mode: color-dodge;
		z-index: -1;
	}

	&:hover::before {
		background: $red;
		border-top-color: $red;
		border-right-color: $red;
		border-bottom-color: $red;
		transition:
			background 0s linear 0.4s,
			border-top-color 0.15s linear,
			border-right-color 0.15s linear 0.15s,
			border-bottom-color 0.15s linear 0.25s;
	}

	&:hover::after {
		border-top: 2.5em solid $red;
		border-left-width: 2.5em;
		border-right-width: 2.5em;
	}
}
